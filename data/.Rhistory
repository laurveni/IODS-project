lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
str(lrn14)
dim(lrn14)
library(dplyr)
library(dplyr)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14,one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
lrn14
dim(lrn14)
# choose a handful of columns to keep
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
# select the 'keep_columns' to create a new dataset
learning2014 <- select(lrn14,one_of(keep_columns))
# choose a handful of columns to keep
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points")
# select the 'keep_columns' to create a new dataset
learning2014 <- select(lrn14,one_of(keep_columns))
# see the stucture of the new dataset
str(learning2014)
# change the name of columns 2,3 and 7
colnames(learning2014)[2] <- "age"
colnames(learning2014)[3] <- "attitude"
colnames(learning2014)[7] <- "points"
# select rows where points is greater than zero
learning2014 <- filter(learning2014, points>0)
# see the stucture of the new dataset
str(learning2014)
setwd("~/GitHub/IODS-project/data")
#read the data sets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
#dimensions of the data sets
dim(hd)
dim(gii)
#structure
str(hd)
str(gii)
#summaries
summary(hd)
summary(gii)
#rename the variables with (shorter) descriptive names
colnames(hd) <- c("rank", "country", "hdi", "life_exp", "exp_edu", "mean_edu","gni_c","gni_rank")
str(hd)
colnames(gii) <-  c("gii_rank", "country","gii", "mat_mort","ad_birth","repr_parl","sedu_f","sed_m","lab_f","lab_m")
str(gii)
# define a new column in gii: ratio of Female and Male populations with secondary education
gii <- mutate(gii, sedu_ratio= sedu_f/sed_m)
# access the dplyr library
library(dplyr)
# define a new column in gii: ratio of Female and Male populations with secondary education
gii <- mutate(gii, sedu_ratio= sedu_f/sed_m)
str(gii)
# define a new column in gii: ratio of labour force participation of females and males
gii <- mutate(gii, lab_ratio=lab_f/lab_m)
str(gii)
# join the two datasets using country as identifier
human <- inner_join(hd, gii, by = "country")
str(human)
dim(human)
# save the data set in the data folder
write.csv(alc, file="human.csv",row.names=FALSE)
# save the data set in the data folder
write.csv(human, file="human.csv",row.names=FALSE)
h <-read.csv("human.csd")
h <-read.csv("human.csv")
str(h)
# save the data set in the data folder
write.csv(human, file="human.csv",row.names=FALSE)
